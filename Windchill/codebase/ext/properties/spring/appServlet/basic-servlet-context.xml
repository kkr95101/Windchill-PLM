<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- jdbc 정보 properties 를 불러옴 -->
    <util:properties id="properties" location="classpath:ext/properties/properties.xml" />

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    <!-- @Autowired, @Resource, @PostConstruct, @PreConstruct 등등의 어노테이션을 사용하기 위한 설정 -->
    <context:annotation-config />

    <context:component-scan base-package="ext">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- view name tanslator -->
    <beans:bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />

	<!-- Spring 4.2 Contentnegotiatingviewresolver not use mediaType -->

	<beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="true" />
		<beans:property name="ignoreAcceptHeader" value="true" />
		<beans:property name="useJaf" value="false" />
		<beans:property name="defaultContentType" value="text/html" />
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="html" value="text/html" />
				<beans:entry key="json" value="application/json" />
				<beans:entry key="xml" value="application/xml" />
			</beans:map>
		</beans:property>
	</beans:bean>
    
    
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<!-- <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="json" value="application/json" />
                <beans:entry key="xml" value="application/xml" />
            </beans:map>
        </beans:property> -->
        <beans:property name="viewResolvers">
       		<beans:list>
                <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
		    	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		        	<beans:property name="prefix" value="/extcore/" />
		        	<beans:property name="suffix" value=".jsp" />
		    	</beans:bean>
		    </beans:list>
		</beans:property>
		<beans:property name="defaultViews">
        	<beans:list>
		    	<beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		      		<beans:property name="prefixJson" value="false" />
		    	</beans:bean>
			</beans:list>
        </beans:property>
    </beans:bean>
    
     <!--
        첨부 파일 처리를 담당하는 빈
     -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="defaultEncoding" value="euc-kr" />
        <!-- one of the properties available; the maximum file size in bytes -->
        <beans:property name="maxUploadSize" value="5368709120" />
    </beans:bean>

    <!-- Spring Scheduler 설정 -->
<!--     <task:scheduler id="gsScheduler" pool-size="10" /> -->
<!--     <task:executor id="gsTaskExecutor" pool-size="10" /> -->
<!--     <task:annotation-driven executor="gsTaskExecutor" scheduler="gsScheduler" /> -->

    <!-- 이메일 보내기 -->
<!--     <beans:bean id="mailSender" class ="org.springframework.mail.javamail.JavaMailSenderImpl" > -->
<!--         <beans:property name="host" value="210.92.140.11" /> -->
<!--         <beans:property name="port" value="25" /> -->
<!--     </beans:bean> -->
    <!-- Velocity Mail 설정 -->
<!--     <beans:bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer"> -->
<!--         <beans:property name="resourceLoaderPath" value="/extcore/mailTemplate/" /> -->
<!--     </beans:bean> -->

</beans:beans>
